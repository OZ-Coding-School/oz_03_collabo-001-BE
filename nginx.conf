worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    types_hash_bucket_size 64;

    upstream web_backend {
        server dg01:8000;  # 컨테이너 이름을 실제 컨테이너 이름으로 수정
    }

    # 로그 설정
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # 서버 블록 - HTTP -> HTTPS 리디렉션
    server {
        listen 80;
        server_name api.dogandbaby.co.kr;
        return 301 https://$host$request_uri;
    }

    # 서버 블록 - HTTPS 설정
    server {
        listen 443 ssl;
        server_name api.dogandbaby.co.kr;

        ssl_certificate /etc/letsencrypt/live/api.dogandbaby.co.kr/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.dogandbaby.co.kr/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256";

        # SSL 설정 추가
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        location / {
            add_header Access-Control-Allow-Origin https://dogandbaby.co.kr;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization';
            add_header Access-Control-Allow-Credentials 'true';

            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin https://dogandbaby.co.kr;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization';
                add_header Access-Control-Allow-Credentials 'true';
                return 204;
            }

            proxy_pass http://web_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /static/ {
            alias /app/static/;  # 여기에 정적 파일이 있는 경로를 설정
        }

        location /media/ {
            alias /app/media/;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
